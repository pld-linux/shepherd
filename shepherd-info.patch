--- shepherd-1.0.1/doc/shepherd.texi.orig	2025-01-12 17:43:35.000000000 +0100
+++ shepherd-1.0.1/doc/shepherd.texi	2025-01-18 21:47:20.466619820 +0100
@@ -24,15 +24,12 @@ copy of the license is included in the s
 Documentation License''.
 @end copying
 
-@dircategory System software
+@dircategory System software:
 @direntry
-* shepherd: (shepherd). The Shepherd service manager.
-* herd: (shepherd)Invoking herd
-                        Controlling the Shepherd service manager.
-* reboot: (shepherd)Invoking reboot
-                        Rebooting a Shepherd-controlled system.
-* halt: (shepherd)Invoking halt
-                        Turning off a Shepherd-controlled system.
+* shepherd: (shepherd).			The Shepherd service manager
+* herd: (shepherd)herd.			Controlling the Shepherd service manager
+* reboot: (shepherd)reboot.		Rebooting a Shepherd-controlled system
+* halt: (shepherd)halt.			Turning off a Shepherd-controlled system
 @end direntry
 
 @titlepage
@@ -124,9 +121,9 @@ Shepherd's more advanced features.
 @chapter Jump Start
 
 The Shepherd comes with two main commands: @command{shepherd}, which is
-the daemon that manages services (@pxref{Invoking shepherd}), and
+the daemon that manages services (@pxref{shepherd}), and
 @command{herd}, the command to monitor and control @command{shepherd}
-(@pxref{Invoking herd}).  The @command{shepherd} command itself may run
+(@pxref{herd}).  The @command{shepherd} command itself may run
 as an ``init system'', also known as PID@tie{}1@footnote{In that case it
 is the first process started by the system, hence the process identifier
 (PID) 1.}, where it manages system services, or as a user, where it
@@ -275,15 +272,15 @@ trouble.  Both @command{shepherd} and he
 
 
 @menu
-* Invoking shepherd::           How to start the service damon.
-* Invoking herd::               Controlling daemons.
-* Invoking reboot::             Rebooting a shepherd-controlled system.
-* Invoking halt::               Turning off a shepherd-controlled system.
+* shepherd::                    How to start the service damon.
+* herd::                        Controlling daemons.
+* reboot::                      Rebooting a shepherd-controlled system.
+* halt::                        Turning off a shepherd-controlled system.
 @end menu
 
 @c @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
 
-@node Invoking shepherd
+@node shepherd
 @section Invoking @command{shepherd}
 
 @cindex @command{shepherd} Invocation
@@ -311,7 +308,7 @@ As the final ``d'' suggests, @command{sh
 the background, so you will not interact with it directly.  After it is
 started, @command{shepherd} listens on a socket, usually
 @file{/var/run/shepherd/socket}; the @dfn{herd} tool sends commands to
-@command{shepherd} using this socket (@pxref{Invoking herd}).
+@command{shepherd} using this socket (@pxref{herd}).
 
 The @command{shepherd} command accepts the following options:
 
@@ -406,7 +403,7 @@ environment variable is defined.
 
 If @code{-} is specified as file name, commands will be read from
 standard input, one per line, as would be passed on a @command{herd}
-command line (@pxref{Invoking herd}).
+command line (@pxref{herd}).
 
 @item -S
 @itemx --silent
@@ -419,12 +416,12 @@ Synonym for @code{--silent}.
 
 @c @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
 
-@node Invoking herd
+@node herd
 @section Invoking @command{herd}
 
 @cindex herd
 The @command{herd} command is a generic client program to control a
-running instance of @command{shepherd} (@pxref{Invoking shepherd}).
+running instance of @command{shepherd} (@pxref{shepherd}).
 When running as root, it communicates with the @dfn{system
 instance}---the process with PID@tie{}1; when running as a normal user,
 it communicates with the @dfn{user's instance}, which is a regular,
@@ -522,7 +519,7 @@ failed.
 
 @c @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
 
-@node Invoking reboot
+@node reboot
 @section Invoking @command{reboot}
 
 @cindex herd
@@ -564,7 +561,7 @@ eventual kexec reboot.  Last, if kexec r
 
 @c @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
 
-@node Invoking halt
+@node halt
 @section Invoking @command{halt}
 
 @cindex herd
@@ -1575,7 +1572,7 @@ Displays detailed information about ever
 Evaluate in the @command{shepherd} process the Scheme code in
 @var{file}, in a fresh module that uses the @code{(shepherd services)}
 module---as with the @code{--config} option of @command{shepherd}
-(@pxref{Invoking shepherd}).
+(@pxref{shepherd}).
 
 @item eval @var{exp}
 Likewise, evaluate Scheme expression @var{exp} in a fresh module with
@@ -1621,7 +1618,7 @@ respawnable services are started, as oth
 @item kexec
 On GNU/Linux, reboot straight into a new Linux kernel previously loaded
 with the @command{kexec -l @var{file}} command.  This is the action
-invoked by the @command{reboot -k} command.  @xref{Invoking reboot}.
+invoked by the @command{reboot -k} command.  @xref{reboot}.
 
 @end table
 
@@ -1693,7 +1690,7 @@ If in doubt, please get in touch with us
 
 @cindex configuration file, examples
 The configuration file of the @command{shepherd} command
-(@pxref{Invoking shepherd}) defines, registers, and possibly starts
+(@pxref{shepherd}) defines, registers, and possibly starts
 @dfn{services}.  Each service specifies other services it depends on and
 how it is started and stopped.  The configuration file contains Scheme
 code that uses the programming interface of the @code{(shepherd
@@ -1801,7 +1798,7 @@ Let's now look at @dfn{timers}---service
 chosen calendar events (@pxref{Timers}).  If you ever used systemd
 timers or the venerable cron, this is similar.  The example below
 defines a timer that fires twice a day and runs the @command{updatedb}
-command as root (@pxref{Invoking updatedb,,, find, Finding Files}):
+command as root (@pxref{updatedb,,, find, Finding Files}):
 
 @lisp
 ;; Import the module for 'make-timer-constructor' & co.
@@ -2202,8 +2199,8 @@ The command runs from the directory spec
 @option{--working-directory} option of @command{herd}; it starts with the
 environment variables in @code{default-environment-variables}, augmented
 with @env{HOME} when running as a different user, with the addition of
-variables passed with @code{--environment-variable}.  @xref{Invoking
-herd}, for more info on influential command-line options.
+variables passed with @code{--environment-variable}.  @xref{herd},
+for more info on influential command-line options.
 
 @deffn {Procedure} transient-service [@var{provision}] @
          [#:requirement '()]
@@ -2251,8 +2248,8 @@ The command runs from the directory spec
 @option{--working-directory} option of @command{herd}; it has with the
 environment variables in @code{default-environment-variables}, augmented
 with @env{HOME} when running as a different user, with the addition of
-variables passed with @code{--environment-variable}.  @xref{Invoking
-herd}, for more info on influential command-line options.
+variables passed with @code{--environment-variable}.  @xref{herd},
+for more info on influential command-line options.
 
 This @code{timer} service can be added to your configuration like so:
 
@@ -2448,7 +2445,7 @@ Receive a command from @var{port} and re
 @end deffn
 
 In practice, communication with @command{shepherd} takes place over a
-Unix-domain socket, as discussed earlier (@pxref{Invoking shepherd}).
+Unix-domain socket, as discussed earlier (@pxref{shepherd}).
 Clients may open a connection with the procedure below.
 
 @deffn {Procedure} open-connection [@var{file}]
